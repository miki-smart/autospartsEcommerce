version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: identity-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: IdentityDb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - identity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  identity-migrator:
    build:
      context: ../../..
      dockerfile: src/Identity/Identity.API/Dockerfile.migrator
    container_name: identity-migrator
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=IdentityDb;Username=postgres;Password=postgres
    networks:
      - identity-network

  identity-api:
    build:
      context: ../../..
      dockerfile: src/Identity/Identity.API/Dockerfile
    container_name: identity-api
    ports:
      - "5000:80"
    depends_on:
      - identity-migrator
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=IdentityDb;Username=postgres;Password=postgres
    networks:
      - identity-network
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:

networks:
  identity-network:
    driver: bridge
